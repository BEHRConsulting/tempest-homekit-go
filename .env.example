# Tempest HomeKit Go - Environment Configuration
# Copy this file to .env and customize with your values
# Note: Command-line flags override environment variables

# ============================================================================
# WEATHERFLOW API CONFIGURATION
# ============================================================================

# WeatherFlow API Token (required for API-based weather data)
# Get your token from: https://tempestwx.com/settings/tokens
# Replace 'your-token-here' with your actual token
TEMPEST_TOKEN=your-token-here

# Station Name (must match your station name in WeatherFlow)
# Replace 'Your Station Name' with your actual station name
TEMPEST_STATION_NAME=Your Station Name

# ============================================================================
# HOMEKIT CONFIGURATION
# ============================================================================

# HomeKit PIN for pairing (format: XXXXXXXX with no dashes)
HOMEKIT_PIN=00102003

# Sensors to enable in HomeKit (comma-separated)
# Options: temp, lux, humidity, uv, wind, rain, pressure, lightning
SENSORS=temp,lux,humidity,uv

# ============================================================================
# WEB CONSOLE CONFIGURATION
# ============================================================================

# Web server port
WEB_PORT=8080

# Units for temperature, wind, rain
# Options: imperial, metric, sae
UNITS=imperial

# Pressure units
# Options: inHg, mb, hpa
UNITS_PRESSURE=inHg

# ============================================================================
# DATA HISTORY CONFIGURATION
# ============================================================================

# Enable preloading historical observations on startup (true/false)
# When true the service will preload historical observations up to HISTORY_POINTS.
READ_HISTORY=false

# Number of data points to store in memory (min: 10, default: 1000)
HISTORY_POINTS=1000

# Hours of data to display in charts (0=all data, default: 24)
CHART_HISTORY_HOURS=24

# ============================================================================
# DATA SOURCE CONFIGURATION
# ============================================================================

# Enable UDP stream mode (receive data from local Tempest station)
# Options: true, false
UDP_STREAM=false

# Station URL override (optional, for custom data sources)
STATION_URL=

# Disable all internet access (offline mode, requires UDP_STREAM=true)
# Options: true, false
DISABLE_INTERNET=false

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Log level
# Options: error, info, debug
LOG_LEVEL=error

# Log filter - only show messages containing this string (optional)
LOG_FILTER=

# ============================================================================
# ALARM / NOTIFICATION CONFIGURATION
# ============================================================================

# Alarm configuration file or inline JSON
# Examples:
#   ALARMS=@/path/to/alarms.json
#   ALARMS='{"alarms":[...]}'
ALARMS=

# Alarm editor configuration (standalone mode)
# Set to a filename to run alarm editor: @filename.json
ALARMS_EDIT=

# Port for alarm editor web UI (default: 8081)
ALARMS_EDIT_PORT=8081

# Webhook listener configuration (standalone mode)
# Set to 'true' to start webhook listener server
WEBHOOK_LISTENER=

# Port for webhook listener server (default: 8082)
WEBHOOK_LISTEN_PORT=8082

# SMTP Email Configuration (for generic email notifications)
# Leave empty if using Microsoft 365 OAuth2 instead
# Examples:
#   Gmail:          SMTP_HOST=smtp.gmail.com          SMTP_PORT=587  SMTP_USE_TLS=true
#   Office 365:     SMTP_HOST=smtp.office365.com      SMTP_PORT=587  SMTP_USE_TLS=true
#   SendGrid:       SMTP_HOST=smtp.sendgrid.net       SMTP_PORT=587  SMTP_USE_TLS=true
#   Mailgun:        SMTP_HOST=smtp.mailgun.org        SMTP_PORT=587  SMTP_USE_TLS=true
SMTP_HOST=
SMTP_PORT=
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_ADDRESS=
SMTP_FROM_NAME=
SMTP_USE_TLS=

# Microsoft 365 OAuth2 (optional, for advanced email via Microsoft Graph API)
# To obtain these credentials:
#   1. Go to Azure Portal: https://portal.azure.com
#   2. Navigate to: Azure Active Directory → App registrations → New registration
#   3. Name: "Tempest Weather Alerts" (or your choice)
#   4. Supported account types: "Accounts in this organizational directory only"
#   5. Click "Register"
#   6. Copy the "Application (client) ID" → MS365_CLIENT_ID
#   7. Copy the "Directory (tenant) ID" → MS365_TENANT_ID
#   8. Go to "Certificates & secrets" → "New client secret" → Copy the Value → MS365_CLIENT_SECRET
#   9. Go to "API permissions" → "Add a permission" → "Microsoft Graph" → "Application permissions"
#      Add: Mail.Send (allows sending email as any user)
#  10. Click "Grant admin consent" (requires admin privileges)
# Note: Requires Mail.Send permission in Microsoft Graph API
MS365_CLIENT_ID=
MS365_CLIENT_SECRET=
MS365_TENANT_ID=
MS365_FROM_ADDRESS=

# Twilio SMS Configuration
# 
# HOW TO GET TWILIO CREDENTIALS:
# 1. Sign up for Twilio: https://www.twilio.com/try-twilio
#    - Free trial: $15 credit, SMS to verified numbers only
#    - Paid account: SMS to any number, production use
# 2. After signup, go to Twilio Console: https://console.twilio.com/
# 3. Find your credentials in the dashboard:
#    - Account SID: String starting with "AC" (e.g., ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
#    - Auth Token: Click "Show" to reveal (32-character string)
# 4. Get a phone number:
#    - Go to Phone Numbers > Manage > Buy a number
#    - Choose country and capabilities (SMS required)
#    - Purchase number (trial: free, paid: ~$1/month)
#    - Copy your number in E.164 format: +1XXXXXXXXXX
# 5. For production (non-trial):
#    - Upgrade account: Console > Billing
#    - Verify your business/identity if required
#    - Set spending limits in billing settings
# 6. Testing:
#    - Trial accounts: Add verified phone numbers in Console > Verified Caller IDs
#    - Send test SMS with: ./tempest-homekit-go --alarms @alarms.json
# 
# PRICING (as of 2025):
#    - Outbound SMS: ~$0.0079 per message (US)
#    - Phone number: ~$1.00 per month
#    - Free trial: $15 credit for testing
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_FROM_NUMBER=

# AWS SNS Configuration (alternative to Twilio)
# 
# IMPORTANT: These credentials are for the APPLICATION RUNTIME USER (limited permissions)
#            Do NOT use your personal/admin AWS credentials here!
# 
# HOW TO GET THESE VALUES:
# 1. Sign in to AWS Console (https://console.aws.amazon.com/)
# 2. Create IAM User for the APPLICATION (not your admin user):
#    - Go to IAM > Users > Create User
#    - User name: "tempest-homekit-sns-sender" (or similar)
#    - Attach policy: Create custom policy with ONLY sns:Publish permission:
#      {
#        "Version": "2012-10-17",
#        "Statement": [{
#          "Effect": "Allow",
#          "Action": ["sns:Publish"],
#          "Resource": "*"
#        }]
#      }
#    - Security credentials > Create access key > Application running outside AWS
#    - Save the Access Key ID and Secret Access Key → use below
# 3. Choose your region (where SNS will send from): us-east-1, us-west-2, etc.
# 4. OPTIONAL - Create SNS Topic (for broadcasting to multiple subscribers):
#    - Use the setup script: ./scripts/setup-aws-sns.sh (recommended)
#    - OR manually: Go to SNS > Topics > Create topic (Standard type)
#    - Copy the Topic ARN (arn:aws:sns:region:account-id:topic-name)
#    - If no topic ARN: SMS sent directly to phone numbers in alarm config
# 5. SMS Sending in AWS SNS:
#    - For production: Run ./scripts/setup-aws-sns.sh to configure settings
#    - Sandbox: Can only send to verified phone numbers
#    - Each region has its own SMS capabilities - check AWS SNS console
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
# Optional: If set, messages are published to this topic instead of direct SMS
# Leave empty to send direct SMS to phone numbers specified in alarm config
AWS_SNS_TOPIC_ARN=

# Syslog Configuration (optional)
SYSLOG_NETWORK=
SYSLOG_ADDRESS=
SYSLOG_PRIORITY=warning

# ============================================================================
# NOTES
# ============================================================================
# 
# Command-line flag equivalents:
#   --token              → TEMPEST_TOKEN
#   --station            → TEMPEST_STATION_NAME
#   --pin                → HOMEKIT_PIN
#   --sensors            → SENSORS
#   --web-port           → WEB_PORT
#   --units              → UNITS
#   --units-pressure     → UNITS_PRESSURE
#   --history            → HISTORY_POINTS
#   --chart-history      → CHART_HISTORY_HOURS
#   --udp-stream         → UDP_STREAM=true
#   --disable-internet   → DISABLE_INTERNET=true
#   --loglevel           → LOG_LEVEL
#   --logfilter          → LOG_FILTER
#   --alarms             → ALARMS
#   --alarms-edit        → ALARMS_EDIT
#   --alarms-edit-port   → ALARMS_EDIT_PORT
#   --webhook-listener   → WEBHOOK_LISTENER=true
#   --webhook-listener-port → WEBHOOK_LISTEN_PORT
#
# Example Usage:
#   1. Copy this file: cp .env.example .env
#   2. Edit .env with your values
#   3. Run: ./tempest-homekit-go
#
# For UDP-only mode (no internet):
#   UDP_STREAM=true
#   DISABLE_INTERNET=true
#
# For minimal memory usage:
#   HISTORY_POINTS=100
#   CHART_HISTORY_HOURS=6
#
# For alarm editor (standalone):
#   ALARMS_EDIT=@alarms.json
#   ALARMS_EDIT_PORT=8081
#
# For webhook listener (standalone):
#   WEBHOOK_LISTENER=true
#   WEBHOOK_LISTEN_PORT=8082
